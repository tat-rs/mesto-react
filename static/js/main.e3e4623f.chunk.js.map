{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/useForm.js","components/PopupWithForm.js","components/AddPlacePopup .js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","utils/api.js","components/PopupConfirmation.js","components/App.js","index.js"],"names":["Header","className","href","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","props","currentUserData","useContext","isOwner","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","onBtnDelete","onCardClick","link","name","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","Footer","currentYear","Date","getFullYear","useForm","useState","values","setValues","errors","setErrors","isValid","setValid","handleChange","evt","target","value","validationMessage","closest","checkValidity","PopupWithForm","isOpen","onMouseDown","onClose","stopPropagation","onSubmit","noValidate","title","children","disabledButton","disabled","button","AddPlacePopup","textOfButton","loader","setLoader","useEffect","preventDefault","subtitle","id","placeholder","minLength","maxLength","onChange","required","ImagePopup","EditProfilePopup","onUpdateUser","EditAvatarPopup","onUpdateAvatar","api","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","info","body","JSON","stringify","user","newCard","cardId","authorization","PopupConfirmation","removeCard","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isPopupConfirmationOpen","setIsPopupConfirmationOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","setCards","closeAllPopups","getAllCards","cardData","catch","err","console","log","getUserInfo","userData","Provider","element","changeLikeCardStatus","state","data","setUserInfo","addNewCard","newAddPlace","setUserAvatar","deleteCard","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3e4623f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import React from 'react';\r\nimport headerLogo from '../images/logo.svg'\r\n\r\nfunction Header() {\r\n\r\n  //вернули разметку\r\n  return (\r\n    <>\r\n      <header className='header page__header'>\r\n        <a className='logo link' href='https://tat-rs.github.io/mesto-react/'>\r\n          <img className='header__logo' src={headerLogo} alt=\"Логотип\" />\r\n        </a>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nfunction Card(props) {\r\n    \r\n  //сохранение данных карточки при клике\r\n  function handleClick() {\r\n    props.onCardClick({\r\n      name: props.card.name, \r\n      link: props.card.link\r\n    })\r\n  }\r\n  //функция постановки лайка/дизлайка\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card)\r\n  }\r\n  //функция открытия удаления карточки\r\n  function handleDeleteClick() {\r\n    props.onBtnDelete() //открытие попапа подтверждения\r\n    //сохраняем id карточки по которой был клик\r\n    props.onCardClick({\r\n      _id: props.card._id,\r\n    })\r\n  }\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); // подписались на контекст текущих данных пользователя\r\n  \r\n  const isOwner = props.card.owner._id === currentUserData._id; // определяем является ли пользователем текущим\r\n\r\n  const cardDeleteButtonClassName = (`cards__delete ${isOwner ? 'cards__delete_visible' : ''}`); // определяем класс кнопки удаления\r\n\r\n  const isLiked = props.card.likes.some(i => i._id === currentUserData._id); // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n\r\n  const cardLikeButtonClassName = (`cards__button ${isLiked ? 'cards__button_active' : ''}`); // определяем класс для кнопки лайка\r\n  \r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <button className={cardDeleteButtonClassName} type='button' aria-label='Удалить' onClick={handleDeleteClick}></button>\r\n        <img className='cards__image' src={`${props.card.link}`} alt={`${props.card.name}`} onClick={handleClick} />\r\n        <div className='cards__desc'>\r\n          <h2 className='cards__subtitle'>{props.card.name}</h2>\r\n          <div className='cards__container-likes'>\r\n            <button className={cardLikeButtonClassName} type='button' aria-label='Лайк' onClick={handleLikeClick} ></button>\r\n            <p className='cards__sum-likes'>{props.card.likes.length}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); //подключаем контект текущих данных пользователя\r\n \r\n  return (\r\n    <>\r\n      <main className='content page__section'>\r\n        <section className='profile page__profile'>\r\n          <div className='profile__container'>\r\n            <button className='profile__image-edit' onClick={props.onEditAvatar}>\r\n              <img className='profile__image' src={currentUserData.avatar} alt='Фото пользователя' />\r\n            </button>\r\n            <div className='profile__info'>\r\n              <h1 className='profile__name'>{currentUserData.name}</h1>\r\n              <button className='profile__edit link' type='button' aria-label='Редактировать данные профиля' onClick={props.onEditProfile}></button>\r\n              <p className='profile__desc'>{currentUserData.about}</p>\r\n            </div>\r\n          </div>\r\n          <button className='profile__button link' type='button' aria-label='Добавить новую карточку' onClick={props.onAddPlace}></button>\r\n        </section>\r\n\r\n          <section className='cards page__cards' aria-label='Карточки с изображениями'>\r\n            <ul className='cards__list'>\r\n              \r\n              {props.cards.map((card) => (\r\n                <Card card={card} key={card._id} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onBtnDelete={props.onBtnDelete}/>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n      </main>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n  const currentYear = new Date().getFullYear(); //сохранен текущий год в переменной\r\n \r\n  return (\r\n    <>\r\n      <footer className='footer page__section'>\r\n        <p className='footer__author'>&copy; {currentYear} Mesto Russia</p>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nexport function useForm() {\r\n\r\n  const [values, setValues] = React.useState({}); //состояние значений инпутов формы\r\n\r\n  const [errors, setErrors] = React.useState({}); //состояние ошибок инпутов формы\r\n\r\n  const [isValid, setValid] = React.useState(false); //состояние валидности формы\r\n\r\n\r\n  function handleChange(evt) {\r\n\r\n    let name = evt.target.name\r\n    let value = evt.target.value\r\n\r\n    setValues({\r\n      ...values,\r\n      [name] : value,\r\n    })\r\n\r\n    setErrors({\r\n      ...errors,\r\n      [evt.target.name]: evt.target.validationMessage\r\n    })\r\n\r\n    setValid(evt.target.closest(\".popup__form\").checkValidity())\r\n  }\r\n\r\n  return {\r\n    values,\r\n    errors,\r\n    isValid,\r\n    setValues,\r\n    setErrors,\r\n    setValid,\r\n    handleChange,\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n return (\r\n    <>\r\n      <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : '' }`} onMouseDown ={props.onClose}>\r\n        <div className='popup__container' onMouseDown ={(evt) => evt.stopPropagation()}>\r\n          <button className='popup__close link' type='button' aria-label='Закрыть форму' onClick={props.onClose}></button>\r\n          <form className={`popup__form form form_type_${props.name}`} name={`form-${props.name}`} onSubmit={props.onSubmit} noValidate>\r\n            <h2 className=\"form__title\">{`${props.title}`}</h2>\r\n            {props.children}\r\n            <button className={`form__button ${props.disabledButton ? 'form__button_disabled' : ''}`} type=\"submit\" disabled={props.disabledButton}>{props.button}</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from \"react\";\r\nimport { useForm } from \"../utils/useForm\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton); //начальное значение кнопки\r\n\r\n  const {values, errors, isValid, handleChange, setValues, setErrors, setValid} = useForm();\r\n  \r\n  //очищаем значение инпутов при монтировании\r\n  React.useEffect(() => {\r\n    setValid(false)\r\n    setValues({})\r\n    setErrors({})\r\n    setLoader(props.textOfButton);\r\n  }, [props.isOpen, props.textOfButton, setValues, setErrors, setValid]);\r\n\r\n  //передаем новые значения инпутов по сабмиту\r\n  function handleSubmit(evt) {\r\n    // отменяем действие браузера по умолчанию\r\n    evt.preventDefault();\r\n  \r\n    // Передаём значения управляемых компонентов во внешний обработчик (название и ссылка на изображение)\r\n    props.onAddPlace({\r\n      subtitle: values.subtitle,\r\n      link: values.link,\r\n    });\r\n\r\n    setLoader('Создание...');\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name='new-card' title='Новое место' textOfButton='Создать' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} button={loader} disabledButton={!isValid}>\r\n\r\n        <input className=\"form__item form__item_type_image-subtitle\" id=\"image-subtitle\" type=\"text\" name=\"subtitle\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" value={values.subtitle || ''} onChange={handleChange} required />\r\n        <span className=\"form__error image-subtitle-error\">{!isValid && errors.subtitle}</span>\r\n        <input className=\"form__item form__item_type_image-link\" id=\"image-link\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" value={values.link || ''} onChange={handleChange} required />\r\n        <span className=\"form__error image-link-error\">{!isValid && errors.link}</span>\r\n\r\n      </PopupWithForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n  \r\n  return (\r\n    <>\r\n      <div className={`popup popup_type_image ${props.card.link && 'popup_opened'}`} onClick={props.onClose}>\r\n        <div className=\"popup__container popup__container_transparent\" onClick={(evt) => evt.stopPropagation()}>\r\n          <button className=\"popup__close link\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}></button>\r\n          <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n          <h2 className=\"popup__subtitle\">{props.card.name}</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport {useForm} from '../utils/useForm'\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); //подписываемся на контекст\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton); //начальное значение кнопки\r\n\r\n  const {values, errors, isValid, handleChange, setValues, setErrors, setValid} = useForm();\r\n\r\n  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setValid(false)\r\n    setValues({...values, name: currentUserData.name, about: currentUserData.about})\r\n    setErrors({})\r\n    setLoader(props.textOfButton);\r\n  }, [currentUserData, props.isOpen, props.textOfButton, setValues, setErrors, setValid]); \r\n\r\n  //функция обновления данных пользователя по сабмиту\r\n  function handleSubmit(evt) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    evt.preventDefault();\r\n  \r\n    // Передаём значения имени и описания во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: values.name,\r\n      about: values.about,\r\n    });\r\n\r\n    setLoader('Сохранение...');\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name='edit' title='Редактировать профиль' textOfButton='Сохранить' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} button={loader} disabledButton={!isValid}>\r\n\r\n        <input className=\"form__item form__item_type_name\" id=\"name-profile\" type=\"text\" name=\"name\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" value={values.name || ''} onChange={handleChange} required />\r\n        <span className=\"form__error name-profile-error\">{!isValid && errors.name}</span>\r\n        <input className=\"form__item form__item_type_desc\" id=\"desc-profile\" type=\"text\" name=\"about\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" value={values.about || ''} onChange={handleChange} required />\r\n        <span className=\"form__error desc-profile-error\">{!isValid && errors.about}</span>\r\n\r\n      </PopupWithForm>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport {useForm} from '../utils/useForm'\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton); //начальное значение кнопки\r\n\r\n  const {values, errors, isValid, handleChange, setValues, setErrors, setValid} = useForm();\r\n\r\n  //очищаем значение инпутов при монтировании\r\n  React.useEffect(() => {\r\n    setValid(false)\r\n    setValues({})\r\n    setErrors({})\r\n    setLoader(props.textOfButton);\r\n  }, [props.isOpen, props.textOfButton, setValues, setErrors, setValid]);\r\n\r\n  //обновляем аватар по сабмиту\r\n  function handleSubmit(evt) {\r\n    // отменяем действие браузера по умолчанию\r\n    evt.preventDefault();\r\n  \r\n    props.onUpdateAvatar({\r\n      avatar: values.avatar,\r\n    });\r\n\r\n    setLoader('Сохранение...');\r\n\r\n  } \r\n\r\n  return (\r\n    <>\r\n    <PopupWithForm name='edit-avatar' title='Обновить аватар' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} button={loader} disabledButton={!isValid}>\r\n\r\n      <input className=\"form__item form__item_type_image-link\" id=\"avatar-link\" type=\"url\" name=\"avatar\" placeholder=\"Ссылка на фото профиля\" value={values.avatar || ''} onChange={handleChange} required />\r\n      <span className=\"form__error avatar-link-error\">{!isValid && errors.avatar}</span>\r\n\r\n    </PopupWithForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup\r\n","//класс запроса к серверу\r\nclass Api {\r\n  constructor({url, headers}) {\r\n    this._url = url; //ссылка сервера\r\n    this._headers = headers; //заголовок\r\n  }\r\n\r\n  //метод проверки результата запроса к серверу\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json(); //возвращаем резульат, если нет ошибок\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`); //возвращаем статус ошибки\r\n  };\r\n\r\n   //метод, получающий список всех карточек с сервера\r\n  getAllCards() {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //получаем данные пользователя\r\n  getUserInfo() {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод редактирования данных пользователя\r\n  setUserInfo(info) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: info.name,\r\n        about: info.about,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод редактирования фото профиля\r\n  setUserAvatar(user) {\r\n    return fetch(`${this._url}users/me/avatar/`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: user.avatar,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод добавления новой карточки на страницу\r\n  addNewCard(newCard) {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: newCard.subtitle, //новое описание\r\n        link: newCard.link, //новая ссыока\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод постановки лайка и дизлайка\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return fetch(`${this._url}cards/likes/${cardId}`, {\r\n      method: isLiked ? \"PUT\" : \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод удаления карточки со страницы\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n}\r\n \r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-30/',\r\n  headers: {\r\n    authorization: '3ace1836-34ae-4def-81c7-968efe5e4e17',\r\n    \"content-type\": \"application/json\",\r\n  }\r\n})\r\n\r\nexport default api","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction PopupConfirmation(props) {\r\n\r\n  const [loader, setLoader] = React.useState(props.textOfButton) //текст кнопки сабмита\r\n\r\n  React.useEffect(() => {\r\n    setLoader(props.textOfButton)\r\n  }, [props.isOpen, props.textOfButton])\r\n\r\n  //функция удаления карточки\r\n  function removeCard(evt) {\r\n    evt.preventDefault()\r\n    props.removeCard(props.card) //передаем текущую карточку в функцию удаления\r\n    setLoader('Удаление...')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name=\"delete-confirmation\" title=\"Вы уверены?\" isOpen={props.isOpen} onClose={props.onClose} button={loader} onSubmit={removeCard} />\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default PopupConfirmation","import React from 'react';\r\nimport '../index.css';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport AddPlacePopup from './AddPlacePopup ';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport api from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupConfirmation from './PopupConfirmation';\r\n\r\nfunction App() {\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false); //состояние попапа \"обновить аватар\"\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false); //состояние попапа \"редактировать профиль\"\r\n\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false); //состояние попапа \"добавить карточку\"\r\n\r\n  const [isPopupConfirmationOpen, setIsPopupConfirmationOpen] = React.useState(false); //состояние попапа \"подтвердить удаление карточки\"\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState({}) //состояние попапа с изображением\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({}); //стейт текущих данных пользователя\r\n\r\n  const [cards, setCards] = React.useState([]);//хук состояния карточки \r\n  \r\n  //обработчик открытия попапа редактирования аватара профиля\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  //обработчик открытия попапа редактирования профиля\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true)\r\n  }\r\n\r\n  //обработчик открытия попапа добавления новой карточки\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true)\r\n  }\r\n  \r\n  //обработчик клика по карточке\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card)\r\n  }\r\n\r\n  //обработчик открытия попапа подтверждения удаления карточки\r\n  function handlePopupConfirmationClick() {\r\n    setIsPopupConfirmationOpen(true)\r\n  }\r\n\r\n  //сброс состояний переменных\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false)\r\n    setIsEditProfilePopupOpen(false)\r\n    setIsAddPlacePopupOpen(false)\r\n    setSelectedCard({})\r\n    setIsPopupConfirmationOpen(false)\r\n  }\r\n  //получили массив карточек\r\n  React.useEffect(() => {\r\n    // Отправляем запрос в API и получаем первоначальный массив карточек\r\n    api.getAllCards()\r\n    .then((cardData) => {\r\n      setCards(cardData)\r\n    })\r\n    .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  //получили данные пользователя\r\n  React.useEffect(() => {\r\n    // Отправляем запрос в API и получаем обновлённые данные пользователя\r\n    api.getUserInfo()\r\n    .then((userData) => {\r\n      setCurrentUser(userData); //обновили данные текущего пользователя\r\n    })\r\n    .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  //обновление данных пользователя(имя, описание)\r\n  function handleUpdateUser(data) {\r\n    // Отправляем запрос в API и получаем отредактированные данные пользователя\r\n    api.setUserInfo(data)\r\n    .then((userData) => {\r\n      setCurrentUser(userData);\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //обновление аватара пользователя\r\n  function handleUpdateAvatar(data) {\r\n    // Отправляем запрос в API и получаем обновленный аватар пользователя\r\n    api.setUserAvatar(data)\r\n    .then((userData) => {\r\n      setCurrentUser(userData); //обновили ccылку на аватар пользователя\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //функция постановки лайка/дизлайк\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(element => element._id === currentUser._id); // проверяем, поставлен ли лайк пользователем на карточке\r\n    \r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n    .then((newCard) => {\r\n      setCards((state) => state.map((element) => element._id === card._id ? newCard : element));\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n  \r\n  //функция удаления карточки\r\n  function handleCardDelete(card) {\r\n    // Отправляем запрос в API и получаем обновлённые массив карточек\r\n    api.deleteCard(card._id)\r\n    .then(() => {\r\n      setCards((state) => state.filter(element => element._id !== card._id)) //отфильтровали карточки по которым айди не совпали при клике на удаление\r\n      closeAllPopups()\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //функция добавления карточки\r\n  function handleAddPlaceSubmit(card) {\r\n    // Отправляем запрос в API и получаем обновлённый массив карточек\r\n    api.addNewCard(card)\r\n    .then((newAddPlace) => {\r\n      setCards([newAddPlace, ...cards]); //обновили стейт карточек\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div className='page__content'>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header />\r\n\r\n        <Main \r\n          onEditAvatar={handleEditAvatarClick}\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onCardClick={handleCardClick}\r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onBtnDelete={handlePopupConfirmationClick}\r\n        />\r\n\r\n        <Footer />\r\n\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} textOfButton='Сохранить' />\r\n\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} textOfButton='Создать' />\r\n\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} textOfButton='Сохранить' />\r\n\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n\r\n        <PopupConfirmation isOpen={isPopupConfirmationOpen} onClose={closeAllPopups} card={selectedCard} textOfButton=\"Да\" removeCard={handleCardDelete}/>\r\n\r\n      </CurrentUserContext.Provider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}