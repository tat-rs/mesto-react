{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/AddPlacePopup .js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","utils/api.js","components/App.js","index.js"],"names":["Header","className","href","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","props","currentUserData","useContext","isOwner","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","onCardDelete","link","name","onCardClick","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","Footer","currentYear","Date","getFullYear","PopupWithForm","isOpen","onMouseDown","onClose","evt","stopPropagation","onSubmit","title","children","textOfButton","AddPlacePopup","useState","subtitle","setSubtitle","setLink","useEffect","preventDefault","id","placeholder","minLength","maxLength","value","onChange","target","required","ImagePopup","EditProfilePopup","setName","description","setDescription","onUpdateUser","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","ref","api","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","info","body","JSON","stringify","user","newCard","cardId","authorization","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","setCards","closeAllPopups","getAllCards","cardData","catch","err","console","log","getUserInfo","userData","Provider","element","changeLikeCardStatus","state","deleteCard","filter","data","setUserInfo","addNewCard","newAddPlace","setUserAvatar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f54c5f23.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import React from 'react';\r\nimport headerLogo from '../images/logo.svg'\r\n\r\nfunction Header() {\r\n\r\n  //вернули разметку\r\n  return (\r\n    <>\r\n      <header className='header page__header'>\r\n        <a className='logo link' href='https://tat-rs.github.io/mesto-react/'>\r\n          <img className='header__logo' src={headerLogo} alt=\"Логотип\" />\r\n        </a>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nfunction Card(props) {\r\n    \r\n  //сохранение данных карточки при клике\r\n  function handleClick() {\r\n    props.onCardClick({\r\n      name: props.card.name, \r\n      link: props.card.link\r\n    })\r\n  }\r\n  //функция постановки лайка/дизлайка\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card)\r\n  }\r\n  //функция удаления карточки\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card)\r\n  }\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); // подписались на контекст текущих данных пользователя\r\n  \r\n  const isOwner = props.card.owner._id === currentUserData._id; // определяем является ли пользователем текущим\r\n\r\n  const cardDeleteButtonClassName = (`cards__delete ${isOwner ? 'cards__delete_visible' : ''}`); // определяем класс кнопки удаления\r\n\r\n  const isLiked = props.card.likes.some(i => i._id === currentUserData._id); // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n\r\n  const cardLikeButtonClassName = (`cards__button ${isLiked ? 'cards__button_active' : ''}`); // определяем класс для кнопки лайка\r\n  \r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <button className={cardDeleteButtonClassName} type='button' aria-label='Удалить' onClick={handleDeleteClick}></button>\r\n        <img className='cards__image' src={`${props.card.link}`} alt={`${props.card.name}`} onClick={handleClick} />\r\n        <div className='cards__desc'>\r\n          <h2 className='cards__subtitle'>{props.card.name}</h2>\r\n          <div className='cards__container-likes'>\r\n            <button className={cardLikeButtonClassName} type='button' aria-label='Лайк' onClick={handleLikeClick} ></button>\r\n            <p className='cards__sum-likes'>{props.card.likes.length}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); //подключаем контект текущих данных пользователя\r\n \r\n  return (\r\n    <>\r\n      <main className='content page__section'>\r\n        <section className='profile page__profile'>\r\n          <div className='profile__container'>\r\n            <button className='profile__image-edit' onClick={props.onEditAvatar}>\r\n              <img className='profile__image' src={currentUserData.avatar} alt='Фото пользователя' />\r\n            </button>\r\n            <div className='profile__info'>\r\n              <h1 className='profile__name'>{currentUserData.name}</h1>\r\n              <button className='profile__edit link' type='button' aria-label='Редактировать данные профиля' onClick={props.onEditProfile}></button>\r\n              <p className='profile__desc'>{currentUserData.about}</p>\r\n            </div>\r\n          </div>\r\n          <button className='profile__button link' type='button' aria-label='Добавить новую карточку' onClick={props.onAddPlace}></button>\r\n        </section>\r\n\r\n          <section className='cards page__cards' aria-label='Карточки с изображениями'>\r\n            <ul className='cards__list'>\r\n              \r\n              {props.cards.map((card) => (\r\n                <Card card={card} key={card._id} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n      </main>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n  const currentYear = new Date().getFullYear(); //сохранен текущий год в переменной\r\n \r\n  return (\r\n    <>\r\n      <footer className='footer page__section'>\r\n        <p className='footer__author'>&copy; {currentYear} Mesto Russia</p>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n return (\r\n    <>\r\n      <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : '' }`} onMouseDown ={props.onClose}>\r\n        <div className='popup__container' onMouseDown ={(evt) => evt.stopPropagation()}>\r\n          <button className='popup__close link' type='button' aria-label='Закрыть форму' onClick={props.onClose}></button>\r\n          <form className={`popup__form form form_type_${props.name}`} name={`form-${props.name}`} onSubmit={props.onSubmit}>\r\n            <h2 className=\"form__title\">{`${props.title}`}</h2>\r\n            {props.children}\r\n            <button className=\"form__button\" type=\"submit\">{props.textOfButton}</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n\r\n  const [subtitle, setSubtitle] = React.useState(''); //переменная состояния названия карточки\r\n  const [link, setLink] = React.useState(''); //переменная состояния ссылки на изображение карточки\r\n\r\n  //изменяем значение названия карточки на вводимое значение в инпут\r\n  function handlSubtitleChange(evt) {\r\n    setSubtitle(evt.target.value)\r\n  }\r\n\r\n  //изменяем значение ссылки на изображение карточки на вводимое значение в инпут\r\n  function handlLinkChange(evt) {\r\n    setLink(evt.target.value)\r\n  }\r\n  \r\n  //очищаем значение инпутов при монтировании\r\n  React.useEffect(() => {\r\n    setSubtitle('');\r\n    setLink('');\r\n  }, [props.isOpen]);\r\n\r\n  //передаем новые значения инпутов по сабмиту\r\n  function handleSubmit(evt) {\r\n    // отменяем действие браузера по умолчанию\r\n    evt.preventDefault();\r\n  \r\n    // Передаём значения управляемых компонентов во внешний обработчик (название и ссылка на изображение)\r\n    props.onAddPlace({\r\n      subtitle,\r\n      link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name='new-card' title='Новое место' textOfButton='Создать' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\r\n\r\n        <input className=\"form__item form__item_type_image-subtitle\" id=\"image-subtitle\" type=\"text\" name=\"subtitle\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" value={subtitle || ''} onChange={handlSubtitleChange} required />\r\n        <span className=\"form__error image-subtitle-error\"></span>\r\n        <input className=\"form__item form__item_type_image-link\" id=\"image-link\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" value={link || ''} onChange={handlLinkChange} required />\r\n        <span className=\"form__error image-link-error\"></span>\r\n\r\n      </PopupWithForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddPlacePopup","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n  \r\n  return (\r\n    <>\r\n      <div className={`popup popup_type_image ${props.card.link && 'popup_opened'}`} onClick={props.onClose}>\r\n        <div className=\"popup__container popup__container_transparent\" onClick={(evt) => evt.stopPropagation()}>\r\n          <button className=\"popup__close link\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}></button>\r\n          <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n          <h2 className=\"popup__subtitle\">{props.card.name}</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n  const currentUserData = React.useContext(CurrentUserContext); //подписываемся на контекст\r\n\r\n  const [name, setName] = React.useState(''); //переменная состояния имени пользователя\r\n  const [description, setDescription ] = React.useState(''); //переменная состояния описания пользователя\r\n\r\n  //изменяем значение описания на вводимое значение в инпут\r\n  function handleDescriptionChange(evt) {\r\n    setDescription(evt.target.value)\r\n  }\r\n  //изменяем значение имени на вводимое значение в инпут\r\n  function handleNameChange(evt) {\r\n    setName(evt.target.value)\r\n  }\r\n\r\n  // После загрузки текущего пользователя из API его данные будут использованы в управляемых компонентах.\r\n  React.useEffect(() => {\r\n    setName(currentUserData.name);\r\n    setDescription(currentUserData.about);\r\n  }, [currentUserData, props.isOpen]); \r\n\r\n  //функция обновления данных пользователя по сабмиту\r\n  function handleSubmit(evt) {\r\n    // Запрещаем браузеру переходить по адресу формы\r\n    evt.preventDefault();\r\n  \r\n    // Передаём значения имени и описания во внешний обработчик\r\n    props.onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PopupWithForm name='edit' title='Редактировать профиль' textOfButton='Сохранить' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}>\r\n\r\n        <input className=\"form__item form__item_type_name\" id=\"name-profile\" type=\"text\" name=\"name\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" value={name || ''} onChange={handleNameChange} required />\r\n        <span className=\"form__error name-profile-error\"></span>\r\n        <input className=\"form__item form__item_type_desc\" id=\"desc-profile\" type=\"text\" name=\"about\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" value={description || ''} onChange={handleDescriptionChange} required />\r\n        <span className=\"form__error desc-profile-error\"></span>\r\n\r\n      </PopupWithForm>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n\r\n  const avatarRef = React.useRef(); //реф аватара пользователя\r\n\r\n  //очищаем значение инпутов при монтировании\r\n  React.useEffect(() => {\r\n    avatarRef.current.value = '';\r\n  }, [props.isOpen]);\r\n\r\n  //обновляем аватар по сабмиту\r\n  function handleSubmit(evt) {\r\n    // отменяем действие браузера по умолчанию\r\n    evt.preventDefault();\r\n  \r\n    props.onUpdateAvatar({\r\n      avatar: avatarRef.current.value,\r\n    });\r\n\r\n  } \r\n\r\n  return (\r\n    <>\r\n    <PopupWithForm name='edit-avatar' title='Обновить аватар' textOfButton='Сохранить' isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit} >\r\n\r\n      <input className=\"form__item form__item_type_image-link\" id=\"avatar-link\" type=\"url\" name=\"avatar\" placeholder=\"Ссылка на фото профиля\" ref={avatarRef} required />\r\n      {<span className=\"form__error avatar-link-error\"></span>}\r\n\r\n    </PopupWithForm>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditAvatarPopup\r\n","//класс запроса к серверу\r\nclass Api {\r\n  constructor({url, headers}) {\r\n    this._url = url; //ссылка сервера\r\n    this._headers = headers; //заголовок\r\n  }\r\n\r\n  //метод проверки результата запроса к серверу\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json(); //возвращаем резульат, если нет ошибок\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`); //возвращаем статус ошибки\r\n  };\r\n\r\n   //метод, получающий список всех карточек с сервера\r\n  getAllCards() {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //получаем данные пользователя\r\n  getUserInfo() {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод редактирования данных пользователя\r\n  setUserInfo(info) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: info.name,\r\n        about: info.about,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод редактирования фото профиля\r\n  setUserAvatar(user) {\r\n    return fetch(`${this._url}users/me/avatar/`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: user.avatar,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод добавления новой карточки на страницу\r\n  addNewCard(newCard) {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: newCard.subtitle, //новое описание\r\n        link: newCard.link, //новая ссыока\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод постановки лайка и дизлайка\r\n  changeLikeCardStatus(cardId, isLiked) {\r\n    return fetch(`${this._url}cards/likes/${cardId}`, {\r\n      method: isLiked ? \"PUT\" : \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод удаления карточки со страницы\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n}\r\n \r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-30/',\r\n  headers: {\r\n    authorization: '3ace1836-34ae-4def-81c7-968efe5e4e17',\r\n    \"content-type\": \"application/json\",\r\n  }\r\n})\r\n\r\nexport default api","import React from 'react';\r\nimport '../index.css';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport AddPlacePopup from './AddPlacePopup ';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport api from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction App() {\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false); //состояние попапа \"обновить аватар\"\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false); //состояние попапа \"редактировать профиль\"\r\n\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false); //состояние попапа \"добавить карточку\"\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState({}) //состояние попапа с изображением\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({}); //стейт текущих данных пользователя\r\n\r\n  const [cards, setCards] = React.useState([]);//хук состояния карточки \r\n  \r\n  //обработчик открытия попапа редактирования аватара профиля\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  //обработчик открытия попапа редактирования профиля\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true)\r\n  }\r\n\r\n  //обработчик открытия попапа добавления новой карточки\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true)\r\n  }\r\n  \r\n  //обработчик клика по карточке\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card)\r\n  }\r\n\r\n  //сброс состояний переменных\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false)\r\n    setIsEditProfilePopupOpen(false)\r\n    setIsAddPlacePopupOpen(false)\r\n    setSelectedCard({})\r\n  }\r\n  //получили массив карточек\r\n  React.useEffect(() => {\r\n    // Отправляем запрос в API и получаем первоначальный массив карточек\r\n    api.getAllCards()\r\n    .then((cardData) => {\r\n      setCards(cardData)\r\n    })\r\n    .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  //получили данные пользователя\r\n  React.useEffect(() => {\r\n    // Отправляем запрос в API и получаем обновлённые данные пользователя\r\n    api.getUserInfo()\r\n    .then((userData) => {\r\n      setCurrentUser(userData); //обновили данные текущего пользователя\r\n    })\r\n    .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  //обновление данных пользователя(имя, описание)\r\n  function handleUpdateUser(data) {\r\n    // Отправляем запрос в API и получаем отредактированные данные пользователя\r\n    api.setUserInfo(data)\r\n    .then((userData) => {\r\n      setCurrentUser(userData);\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //обновление аватара пользователя\r\n  function handleUpdateAvatar(data) {\r\n    // Отправляем запрос в API и получаем обновленный аватар пользователя\r\n    api.setUserAvatar(data)\r\n    .then((userData) => {\r\n      setCurrentUser(userData); //обновили ccылку на аватар пользователя\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //функция постановки лайка/дизлайк\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(element => element._id === currentUser._id); // проверяем, поставлен ли лайк пользователем на карточке\r\n    \r\n    // Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api.changeLikeCardStatus(card._id, !isLiked)\r\n    .then((newCard) => {\r\n      setCards((state) => state.map((element) => element._id === card._id ? newCard : element));\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n  \r\n  //функция удаления карточки\r\n  function handleCardDelete(card) {\r\n    // Отправляем запрос в API и получаем обновлённые массив карточек\r\n    api.deleteCard(card._id)\r\n    .then(() => {\r\n      setCards((state) => state.filter(element => element._id !== card._id)) //отфильтровали карточки по которым айди не совпали при клике на удаление\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  //функция добавления карточки\r\n  function handleAddPlaceSubmit(card) {\r\n    // Отправляем запрос в API и получаем обновлённый массив карточек\r\n    api.addNewCard(card)\r\n    .then((newAddPlace) => {\r\n      setCards([newAddPlace, ...cards]); //обновили стейт карточек\r\n      closeAllPopups();\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div className='page__content'>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header />\r\n\r\n        <Main \r\n          onEditAvatar={handleEditAvatarClick}\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onCardClick={handleCardClick}\r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n        />\r\n\r\n        <Footer />\r\n\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}/>\r\n\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n\r\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n\r\n      </CurrentUserContext.Provider>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}