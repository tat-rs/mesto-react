{"version":3,"sources":["images/logo.svg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","index.js"],"names":["Header","className","href","src","headerLogo","alt","api","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkResponse","authorization","Card","props","type","card","link","name","onClick","onCardClick","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","userData","about","avatar","catch","err","console","log","getAllCards","cardData","onEditAvatar","onEditProfile","onAddPlace","map","_id","Footer","PopupWithForm","isOpen","onMouseDown","onClose","evt","stopPropagation","noValidate","title","children","textOfButton","ImagePopup","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","placeholder","minLength","maxLength","required","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1333244a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.bbe2a6ea.svg\";","import React from 'react';\r\nimport headerLogo from '../images/logo.svg'\r\n\r\nfunction Header() {\r\n\r\n  //вернули разметку\r\n  return (\r\n    <>\r\n      <header className='header page__header'>\r\n        <a className='logo link' href='#'>\r\n          <img className='header__logo' src={headerLogo} alt=\"Логотип\" />\r\n        </a>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","//класс запроса к серверу\r\nclass Api {\r\n  constructor({url, headers}) {\r\n    this._url = url; //ссылка сервера\r\n    this._headers = headers; //заголовок\r\n  }\r\n\r\n  //метод проверки результата запроса к серверу\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json(); //возвращаем резульат, если нет ошибок\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`); //возвращаем статус ошибки\r\n  };\r\n\r\n   //метод, получающий список всех карточек с сервера\r\n  getAllCards() {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n  /*\r\n\r\n  //метод добавления новой карточки на страницу\r\n  addNewCard(newCard) {\r\n    return fetch(`${this._url}cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: newCard.subtitle, //новое описание\r\n        link: newCard.link, //новая ссыока\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод удаления карточки со страницы\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  } */\r\n\r\n  //получаем данные пользователя\r\n  getUserInfo() {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  /* //метод редактирования данных пользователя\r\n  editUserInfo(info) {\r\n    return fetch(`${this._url}users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: info.name,\r\n        about: info.about,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод редактирования фото профиля\r\n  editUserAvatar(userAvatar) {\r\n    return fetch(`${this._url}users/me/avatar/`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: userAvatar.avatar,\r\n      })\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод постановки лайка\r\n  setCardlike(cardId) {\r\n    return fetch(`${this._url}cards/likes/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }\r\n\r\n  //метод удаления лайка\r\n  deleteCardlike(cardId) {\r\n    return fetch(`${this._url}cards/likes/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    })\r\n    .then(this._checkResponse)\r\n  }*/\r\n}\r\n \r\nconst api = new Api({\r\n  url: 'https://mesto.nomoreparties.co/v1/cohort-30/',\r\n  headers: {\r\n    authorization: '3ace1836-34ae-4def-81c7-968efe5e4e17',\r\n    \"content-type\": \"application/json\",\r\n  }\r\n})\r\n\r\nexport default api","import React from \"react\";\r\n\r\nfunction Card(props) {\r\n  //сохранение данных карточки при клике\r\n  function handleClick() {\r\n    props.onCardClick({\r\n      name: props.card.name, \r\n      link: props.card.link\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <button className='cards__delete' type='button' aria-label='Удалить'></button>\r\n        <img className='cards__image' src={`${props.card.link}`} alt={`${props.card.name}`} onClick={handleClick} />\r\n        <div className='cards__desc'>\r\n          <h2 className='cards__subtitle'>{props.card.name}</h2>\r\n          <div className='cards__container-likes'>\r\n            <button className='cards__button' type='button' aria-label='Лайк'></button>\r\n            <p className='cards__sum-likes'>{props.card.likes.length}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport api from '../utils/api';\r\nimport Card from './Card';\r\n\r\nfunction Main(props) {\r\n\r\n  const [userName, setUserName] = React.useState('');//хук состояния имени профиля\r\n  const [userDescription, setUserDescription] = React.useState(''); //хук состояния \"о себе\"\r\n  const [userAvatar, setUserAvatar] = React.useState(''); //хук состояния аватара профиля\r\n\r\n  const [cards, setCards] = React.useState([]);//хук состояния карточки\r\n\r\n  //получили данные пользователя\r\n  React.useEffect(() => {\r\n    api.getUserInfo()\r\n      .then((userData) => {\r\n        setUserName(userData.name);\r\n        setUserDescription(userData.about);\r\n        setUserAvatar(userData.avatar);\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  //получили массив карточек\r\n  React.useEffect(() => {\r\n    api.getAllCards()\r\n      .then((cardData) => {\r\n        setCards(cardData)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [])\r\n\r\n  \r\n  return (\r\n    <>\r\n      <main className='content page__section'>\r\n        <section className='profile page__profile'>\r\n          <div className='profile__container'>\r\n            <button className='profile__image-edit' onClick={props.onEditAvatar}>\r\n              <img className='profile__image' src={`${userAvatar}`} alt='Фото пользователя' />\r\n            </button>\r\n            <div className='profile__info'>\r\n              <h1 className='profile__name'>{userName}</h1>\r\n              <button className='profile__edit link' type='button' aria-label='Редактировать данные профиля' onClick={props.onEditProfile}></button>\r\n              <p className='profile__desc'>{userDescription}</p>\r\n            </div>\r\n          </div>\r\n          <button className='profile__button link' type='button' aria-label='Добавить новую карточку' onClick={props.onAddPlace}></button>\r\n        </section>\r\n\r\n          <section className='cards page__cards' aria-label='Карточки с изображениями'>\r\n            <ul className='cards__list'>\r\n              \r\n              {cards.map((card) => (\r\n                <Card card={card} key={card._id} onCardClick={props.onCardClick}/>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n      </main>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n \r\n  return (\r\n    <>\r\n      <footer className='footer page__section'>\r\n        <p className='footer__author'>&copy; 2020 Mesto Russia</p>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n  return (\r\n    <>\r\n      <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`} onMouseDown ={props.onClose}>\r\n        <div className='popup__container' onMouseDown ={(evt) => evt.stopPropagation()}>\r\n          <button className='popup__close link' type='button' aria-label='Закрыть форму' onClick={props.onClose}></button>\r\n          <form className={`popup__form form form_type_${props.name}`} name={`form-${props.name}`} noValidate>\r\n            <h2 className=\"form__title\">{`${props.title}`}</h2>\r\n            {props.children}\r\n            <button className=\"form__button\" type=\"submit\">{props.textOfButton}</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n  \r\n  return (\r\n    <>\r\n      <div className={`popup popup_type_image ${props.card.link && 'popup_opened'}`} onClick={props.onClose}>\r\n        <div className=\"popup__container popup__container_transparent\" onClick={(evt) => evt.stopPropagation()}>\r\n          <button className=\"popup__close link\" type=\"button\" aria-label=\"Закрыть\" onClick={props.onClose}></button>\r\n          <img className=\"popup__image\" src={props.card.link} alt={props.card.name} />\r\n          <h2 className=\"popup__subtitle\">{props.card.name}</h2>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\nimport '../index.css';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\n\r\nfunction App() {\r\n\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false); //состояние попапа \"обновить аватар\"\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false); //состояние попапа \"редактировать профиль\"\r\n\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false); //состояние попапа \"добавить карточку\"\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState({}) //состояние попапа с изображением\r\n  \r\n  //обработчик открытия попапа редактирования аватара профиля\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  //обработчик открытия попапа редактирования профиля\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true)\r\n  }\r\n\r\n  //обработчик открытия попапа добавления новой карточки\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true)\r\n  }\r\n  \r\n  //обработчик клика по карточке\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card)\r\n  }\r\n\r\n  //сброс состояний переменных\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false)\r\n    setIsEditProfilePopupOpen(false)\r\n    setIsAddPlacePopupOpen(false)\r\n    setSelectedCard({})\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className='page__content'>\r\n      <Header />\r\n\r\n      <Main \r\n        onEditAvatar={handleEditAvatarClick}\r\n        onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onCardClick={handleCardClick}\r\n      />\r\n\r\n      <Footer />\r\n\r\n      <PopupWithForm name='edit' title='Редактировать профиль' textOfButton='Сохранить' isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\r\n\r\n        <input className=\"form__item form__item_type_name\" id=\"name-profile\" type=\"text\" name=\"name\" placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required />\r\n        <span className=\"form__error name-profile-error\"></span>\r\n        <input className=\"form__item form__item_type_desc\" id=\"desc-profile\" type=\"text\" name=\"about\" placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required />\r\n        <span className=\"form__error desc-profile-error\"></span>\r\n\r\n      </PopupWithForm>\r\n\r\n      <PopupWithForm name='new-card' title='Новое место' textOfButton='Создать' isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\r\n\r\n        <input className=\"form__item form__item_type_image-subtitle\" id=\"image-subtitle\" type=\"text\" name=\"subtitle\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required />\r\n        <span className=\"form__error image-subtitle-error\"></span>\r\n        <input className=\"form__item form__item_type_image-link\" id=\"image-link\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" required />\r\n        <span className=\"form__error image-link-error\"></span>\r\n\r\n      </PopupWithForm>\r\n\r\n      <PopupWithForm name='edit-avatar' title='Обновить аватар' textOfButton='Сохранить' isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\r\n\r\n        <input className=\"form__item form__item_type_image-link\" id=\"avatar-link\" type=\"url\" name=\"avatar\" placeholder=\"Ссылка на фото профиля\" required />\r\n        <span className=\"form__error avatar-link-error\"></span>\r\n\r\n      </PopupWithForm>\r\n\r\n      <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}